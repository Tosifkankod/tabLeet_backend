{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T10:17:41.741Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T10:17:51.801Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T10:17:57.865Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T10:18:16.352Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T10:18:33.709Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T10:18:46.799Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T10:18:47.859Z",
    "meta": {
        "success": false,
        "statusCode": 404,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/self"
        },
        "message": "route not found",
        "data": null,
        "trace": {
            "error": "Error: route not found\n    at C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\app.ts:19:11\n    at Layer.handleRequest (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at trimPrefix (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:342:13)\n    at C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:297:9\n    at processParams (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:291:5)\n    at jsonParser (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\body-parser\\lib\\types\\json.js:100:7)\n    at Layer.handleRequest (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at trimPrefix (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:342:13)\n    at C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:297:9"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T10:18:52.016Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:10:37.245Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:11:01.091Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:11:09.971Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:11:21.439Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:11:25.833Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:13:22.007Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:13:53.909Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:14:05.049Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:14:07.498Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:14:11.817Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:14:59.837Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:15:34.379Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:15:46.808Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:15:59.225Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:16:01.875Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:16:05.827Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:17:54.317Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:17:58.940Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:18:02.870Z",
    "meta": {
        "success": false,
        "statusCode": 404,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/userDetails%20"
        },
        "message": "route not found",
        "data": null,
        "trace": {
            "error": "Error: route not found\n    at C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\app.ts:19:11\n    at Layer.handleRequest (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at trimPrefix (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:342:13)\n    at C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:297:9\n    at processParams (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:582:12)\n    at Immediate.next (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:291:5)\n    at Immediate._onImmediate (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:688:15)\n    at processImmediate (node:internal/timers:487:21)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:18:10.354Z",
    "meta": {
        "success": false,
        "statusCode": 404,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/userDetails"
        },
        "message": "route not found",
        "data": null,
        "trace": {
            "error": "Error: route not found\n    at C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\app.ts:19:11\n    at Layer.handleRequest (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at trimPrefix (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:342:13)\n    at C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:297:9\n    at processParams (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:582:12)\n    at Immediate.next (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:291:5)\n    at Immediate._onImmediate (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\router\\index.js:688:15)\n    at processImmediate (node:internal/timers:487:21)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:19:16.500Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:19:22.167Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle",
        "data": null,
        "trace": {
            "error": "TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:1020:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:243:14)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:29:34)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:99:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:20:34.953Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:20:39.566Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:20:42.702Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle",
        "data": null,
        "trace": {
            "error": "TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:1020:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:243:14)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:29:34)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:101:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:21:06.639Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:21:14.485Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:21:22.041Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle",
        "data": null,
        "trace": {
            "error": "TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:1020:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:243:14)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:29:34)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:101:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:22:13.639Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:23:26.362Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:23:30.398Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle",
        "data": null,
        "trace": {
            "error": "TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:1020:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:243:14)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:29:34)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:101:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:23:47.131Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:23:51.828Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:23:53.994Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle",
        "data": null,
        "trace": {
            "error": "TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:1020:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:243:14)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:29:34)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:101:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:25:01.869Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:25:05.923Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:25:57.228Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:27:16.512Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:27:26.712Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:27:29.725Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle",
        "data": null,
        "trace": {
            "error": "TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:1020:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:243:14)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:29:34)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:65:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:28:07.733Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:28:10.714Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:28:24.931Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "getaddrinfo ENOTFOUND leetcode.com",
        "data": null,
        "trace": {
            "error": "Error: getaddrinfo ENOTFOUND leetcode.com\n    at Function.AxiosError.from (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\AxiosError.js:96:14)\n    at RedirectableRequest.handleRequestError (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:638:25)\n    at RedirectableRequest.emit (node:events:518:28)\n    at RedirectableRequest.emit (node:domain:489:12)\n    at ClientRequest.eventHandlers.<computed> (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\follow-redirects\\index.js:49:24)\n    at ClientRequest.emit (node:events:518:28)\n    at ClientRequest.emit (node:domain:489:12)\n    at emitErrorEvent (node:_http_client:104:11)\n    at TLSSocket.socketErrorListener (node:_http_client:518:5)\n    at TLSSocket.emit (node:events:518:28)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:28:27.264Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:28:33.433Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "\"[object Object]\" is not valid JSON",
        "data": null,
        "trace": {
            "error": "SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:63:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:28:49.929Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:28:53.629Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "\"[object Object]\" is not valid JSON",
        "data": null,
        "trace": {
            "error": "SyntaxError: \"[object Object]\" is not valid JSON\n    at JSON.parse (<anonymous>)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:63:22)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:34:00.619Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:34:15.661Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:36:29.020Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:36:51.822Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:37:43.093Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle",
        "data": null,
        "trace": {
            "error": "TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:1020:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:243:14)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:29:34)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:66:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:37:55.028Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:37:57.260Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:46:46.772Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:47:02.382Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:48:13.867Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:48:16.343Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle",
        "data": null,
        "trace": {
            "error": "TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:1020:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:243:14)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:29:34)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:65:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:48:51.883Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:49:15.066Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:49:19.475Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:49:25.311Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:49:32.302Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:49:50.427Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:49:53.264Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Converting circular structure to JSON\n    --> starting at object with constructor 'Socket'\n    |     property 'parser' -> object with constructor 'HTTPParser'\n    --- property 'socket' closes the circle",
        "data": null,
        "trace": {
            "error": "TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'Socket'\n    |     property 'parser' -> object with constructor 'HTTPParser'\n    --- property 'socket' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:1020:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:243:14)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:29:34)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:65:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:50:16.230Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:50:36.108Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:50:42.428Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:50:45.907Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:51:05.712Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:51:08.159Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle",
        "data": null,
        "trace": {
            "error": "TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle\n    at JSON.stringify (<anonymous>)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:63:23)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:54:20.202Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:54:21.218Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Converting circular structure to JSON\n    --> starting at object with constructor 'Socket'\n    |     property 'parser' -> object with constructor 'HTTPParser'\n    --- property 'socket' closes the circle",
        "data": null,
        "trace": {
            "error": "TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'Socket'\n    |     property 'parser' -> object with constructor 'HTTPParser'\n    --- property 'socket' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:1020:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:243:14)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:29:34)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:65:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:54:28.034Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:55:12.935Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:55:26.395Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:55:48.266Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:55:51.363Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle",
        "data": null,
        "trace": {
            "error": "TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:1020:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:243:14)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:20:15)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:63:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:56:14.300Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:56:21.432Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:56:34.084Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:56:41.147Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-13T14:56:48.902Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle",
        "data": null,
        "trace": {
            "error": "TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'ClientRequest'\n    |     property 'res' -> object with constructor 'IncomingMessage'\n    --- property 'req' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:1020:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:243:14)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:29:34)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:63:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:58:09.505Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T14:58:12.518Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T15:31:39.560Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T15:31:53.558Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T15:34:30.469Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-13T15:34:33.101Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:32:30.553Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:33:28.317Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:33:37.521Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:39:32.518Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:41:02.750Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:41:14.182Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:41:24.124Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:41:27.241Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:41:46.604Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:42:13.613Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:42:26.545Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:42:37.834Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:42:46.176Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:42:51.277Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:42:56.825Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:43:19.922Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:43:26.571Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/tosifkankod"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:43:40.322Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:44:24.911Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:47:25.977Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:47:29.835Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/tosifkankod"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:52:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:47:48.785Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:47:54.624Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/tosifkankod"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:52:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:48:34.804Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:48:36.825Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/tosifkankod"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:53:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:48:44.660Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:48:48.053Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:48:59.163Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:49:08.877Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/tosifkankod"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:52:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:49:42.355Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:49:46.851Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:49:50.011Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/tosifkankod"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:52:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:49:56.190Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:50:11.096Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:50:15.416Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/tosifkankod"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:50:30.610Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:50:44.156Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:50:47.263Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:51:12.349Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:51:25.231Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:51:49.845Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:52:14.330Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:52:17.904Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:47:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:52:33.804Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:52:52.698Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:53:00.219Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:53:01.298Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:53:35.473Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:53:39.576Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:54:58.413Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:55:39.120Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:55:44.533Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:56:22.015Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:56:30.221Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:56:44.503Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:57:35.637Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:57:42.049Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:57:44.978Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:58:00.837Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:58:05.625Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:58:11.371Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:58:33.983Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:58:37.789Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:58:39.336Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:58:40.591Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:58:41.564Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T10:58:43.006Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:22)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T10:59:10.750Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:00:02.275Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:00:04.885Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T11:00:09.441Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:24)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:00:21.764Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:00:30.345Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:00:34.541Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T11:00:36.869Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:24)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:01:00.399Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T11:01:06.436Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:24)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:01:32.843Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:01:37.487Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T11:01:40.176Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details"
        },
        "message": "Request failed with status code 400",
        "data": null,
        "trace": {
            "error": "AxiosError: Request failed with status code 400\n    at settle (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\adapters\\http.js:617:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:46:24)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:02:53.187Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:03:27.980Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:03:47.684Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:03:53.741Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:04:15.772Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:08:31.242Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:11:23.333Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:17:17.717Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:17:45.093Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:17:57.851Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:18:35.429Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:18:40.501Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:18:47.636Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:18:59.614Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:20:05.190Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:20:11.799Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:21:06.488Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:21:08.846Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:21:34.246Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:21:40.771Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:22:03.441Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:22:07.085Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:22:20.376Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:22:29.299Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:22:46.849Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:22:49.392Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:22:55.546Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:22:58.690Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:23:01.385Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T11:23:04.258Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/tosifkankdod"
        },
        "message": "Cannot read properties of undefined (reading 'message')",
        "data": null,
        "trace": {
            "error": "TypeError: Cannot read properties of undefined (reading 'message')\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:34:45)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:23:27.551Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:23:43.300Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:23:56.767Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:24:10.669Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:24:32.707Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:24:46.157Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:24:49.620Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:24:57.368Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:25:06.165Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:25:14.143Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T11:25:17.535Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/tosifkankdod"
        },
        "message": "Cannot set headers after they are sent to the client",
        "data": null,
        "trace": {
            "error": "Error: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (node:_http_outgoing:700:11)\n    at ServerResponse.header (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:684:10)\n    at ServerResponse.send (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:161:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:250:15)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:29:34)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:37:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:25:34.186Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T11:25:36.386Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/tosifkankdod"
        },
        "message": "Cannot set headers after they are sent to the client",
        "data": null,
        "trace": {
            "error": "Error: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (node:_http_outgoing:700:11)\n    at ServerResponse.header (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:684:10)\n    at ServerResponse.send (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:161:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:250:15)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:29:34)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:37:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T11:25:46.142Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/tosifkankdod"
        },
        "message": "Cannot set headers after they are sent to the client",
        "data": null,
        "trace": {
            "error": "Error: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (node:_http_outgoing:700:11)\n    at ServerResponse.header (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:684:10)\n    at ServerResponse.send (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:161:12)\n    at ServerResponse.json (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\node_modules\\express\\lib\\response.js:250:15)\n    at exports.default (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\util\\httpResponse.ts:29:34)\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:37:19)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:26:01.184Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:26:05.204Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:26:08.135Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:26:18.473Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-14T11:26:22.702Z",
    "meta": {
        "success": false,
        "statusCode": 500,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/tosifkankod"
        },
        "message": "Cannot read properties of undefined (reading 'length')",
        "data": null,
        "trace": {
            "error": "TypeError: Cannot read properties of undefined (reading 'length')\n    at userDetails (C:\\Users\\tosif\\Documents\\New folder\\tabLeet_backend\\src\\controller\\leetcodeController.ts:33:23)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:26:35.357Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:26:48.353Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:27:23.611Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:34:59.640Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:35:02.524Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:35:12.169Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:35:17.021Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:35:28.281Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:35:34.539Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:35:38.768Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:39:40.238Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:39:45.677Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:39:55.974Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:40:03.369Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:40:11.371Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:40:20.056Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:40:29.052Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:41:09.297Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:41:16.217Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:41:20.900Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:41:27.727Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:41:31.948Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:41:58.943Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:42:17.620Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:42:20.680Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:42:40.216Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:42:53.452Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:42:56.285Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:43:06.722Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:43:18.809Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:43:33.175Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:43:46.680Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:43:58.406Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:44:12.482Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:44:21.452Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:45:04.152Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:45:23.200Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:49:22.908Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:49:35.292Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:49:37.868Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:49:40.831Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:50:43.021Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:50:49.317Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:52:05.717Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:52:12.940Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:52:22.243Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:52:26.889Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:52:34.215Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:52:55.467Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:54:23.896Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:54:29.964Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T11:54:44.506Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T12:02:16.951Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T12:02:56.329Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T12:03:00.448Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T12:04:41.836Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-14T15:43:59.858Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "http://localhost:3000"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:35:58.552Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:36:49.761Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:37:19.754Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:37:23.019Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:38:38.764Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:38:46.721Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:38:51.704Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:39:06.850Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:39:14.187Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:39:17.737Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:40:05.141Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-15T10:40:17.154Z",
    "meta": {
        "success": false,
        "statusCode": 404,
        "request": {
            "ip": "::ffff:127.0.0.1",
            "method": "GET",
            "url": "/api/v1/calendar/tosifkankod"
        },
        "message": "route not found",
        "data": null,
        "trace": {
            "error": "Error: route not found\n    at C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\src\\app.ts:19:11\n    at Layer.handleRequest (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at trimPrefix (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:342:13)\n    at C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:297:9\n    at processParams (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:582:12)\n    at next (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:291:5)\n    at C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:688:15\n    at next (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:276:14)\n    at Function.handle (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:186:3)\n    at router (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:60:12)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:40:35.198Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:42:52.508Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:43:05.813Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:44:05.099Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:46:06.960Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:46:13.985Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T10:50:08.452Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-15T10:54:00.982Z",
    "meta": {
        "success": false,
        "statusCode": 404,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details/asdfasdf"
        },
        "message": "route not found",
        "data": null,
        "trace": {
            "error": "Error: route not found\n    at C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\src\\app.ts:21:11\n    at Layer.handleRequest (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at trimPrefix (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:342:13)\n    at C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:297:9\n    at processParams (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:582:12)\n    at Immediate.next (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:291:5)\n    at Immediate._onImmediate (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:688:15)\n    at processImmediate (node:internal/timers:487:21)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-15T10:54:23.622Z",
    "meta": {
        "success": false,
        "statusCode": 404,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details/asdfasdf"
        },
        "message": "route not found",
        "data": null,
        "trace": {
            "error": "Error: route not found\n    at C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\src\\app.ts:21:11\n    at Layer.handleRequest (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at trimPrefix (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:342:13)\n    at C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:297:9\n    at processParams (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:582:12)\n    at Immediate.next (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:291:5)\n    at Immediate._onImmediate (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:688:15)\n    at processImmediate (node:internal/timers:487:21)"
        }
    }
}
{
    "level": "ERROR",
    "message": "CONTROLLER_ERROR",
    "timestamp": "2025-09-15T10:54:48.462Z",
    "meta": {
        "success": false,
        "statusCode": 404,
        "request": {
            "ip": "::1",
            "method": "GET",
            "url": "/api/v1/leetcode/user-details/asdfasdf"
        },
        "message": "route not found",
        "data": null,
        "trace": {
            "error": "Error: route not found\n    at C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\src\\app.ts:21:11\n    at Layer.handleRequest (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at trimPrefix (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:342:13)\n    at C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:297:9\n    at processParams (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:582:12)\n    at Immediate.next (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:291:5)\n    at Immediate._onImmediate (C:\\Users\\tosif\\OneDrive\\Documents\\GitHub\\tabLeet_backend\\node_modules\\router\\index.js:688:15)\n    at processImmediate (node:internal/timers:487:21)"
        }
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T11:06:23.399Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T11:06:28.145Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T11:06:34.807Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T11:06:39.205Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T11:07:01.288Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T11:24:58.614Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T11:25:21.521Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T11:25:27.571Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T11:25:34.041Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T11:27:02.712Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T11:27:17.082Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
{
    "level": "INFO",
    "message": "APPLICATION_STARTED",
    "timestamp": "2025-09-15T11:27:22.976Z",
    "meta": {
        "PORT": "3000",
        "SERVER_URL": "localhost"
    }
}
